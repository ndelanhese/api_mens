version: '3.5'

services:
    scansource_database:
        container_name: scansource_database
        build:
            context: ../../
            dockerfile: .docker/staging/postgres/Dockerfile
        ports:
            - "${POSTGRES_PORT}:5432"
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
            - ./postgres/scripts:/etc/postgresql/scripts
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        restart: on-failure
        tty: true

    scansource_redis:
        container_name: scansource_redis
        build:
            context: ../../
            dockerfile: .docker/local/redis/Dockerfile
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - ./redis/data:/data
        restart: on-failure
        tty: true

    scansource_api:
        container_name: scansource_api
        build:
            context: ../../
            dockerfile: .docker/staging/node/Dockerfile
            args:
                UID: ${UID}
                GID: ${GID}
        restart: on-failure
        environment:
            NODE_OPTIONS: ${NODE_OPTIONS}
        ports:
            - "${API_PORT}:3333"
        working_dir: /var/www/scansource-api
        volumes:
            - ../../:/var/www/scansource-api
        tty: true
        links:
            - scansource_database
            - scansource_redis

networks:
  default:
    name: scansource_network